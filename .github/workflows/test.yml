name: Test kernels

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened] # trigger on PRs
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Run tests
    runs-on:
      group: aws-g6-24xlarge
    permissions:
      contents: read
      packages: write
    strategy:
      max-parallel: 4
      matrix:
        python-version: ["3.10", "3.12"]
        torch-version: ["2.5.1", "2.6.0"]

    env:
      UV_PYTHON_PREFERENCE: only-managed

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Lock Torch version
        run: uv lock --upgrade-package "torch==${{ matrix.torch-version }}"

      - name: Install the project
        run: uv sync --all-extras --dev

      - name: Install setuptools for Triton-based test
        run: uv pip install setuptools

      - name: Check typing
        run: uv run mypy src/kernels

      - name: Run tests
        run: uv run pytest tests

      - name: Check kernel conversion
        run: |
          uv pip install wheel
          uv run kernels to-wheel kernels-community/triton-layer-norm 0.0.1
          uv pip install triton_layer_norm-0.0.1*.whl
          uv run python -c "import triton_layer_norm"

      - name: Check README generation
        # For now, just checks that generation doesn't fail.
        run: |
          uv run kernels generate-readme kernels-community/triton-layer-norm --revision docs

      - name: Import check without torch
        run: |
          uv pip uninstall torch
          python -c "import kernels"
